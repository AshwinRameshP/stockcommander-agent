name: Security Scan

on:
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'frontend/src/**'
      - 'package*.json'
      - 'frontend/package*.json'

env:
  NODE_VERSION: '18'

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci

    - name: Run npm audit
      run: |
        npm audit --audit-level moderate --json > backend-audit.json || true
        cd frontend && npm audit --audit-level moderate --json > ../frontend-audit.json || true

    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=medium --json > snyk-backend.json || true
        
    - name: Run Snyk on frontend
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: test
        args: --severity-threshold=medium --json > snyk-frontend.json || true
        json: true
        
    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'inventory-replenishment'
        path: '.'
        format: 'JSON'
        args: >
          --enableRetired
          --enableExperimental
          --failOnCVSS 7

    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-scan-results
        path: |
          backend-audit.json
          frontend-audit.json
          snyk-*.json
          reports/

    - name: Create security issue
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          const title = `Security vulnerabilities detected - ${new Date().toISOString().split('T')[0]}`;
          const body = `
          ## Security Scan Results
          
          The automated security scan has detected vulnerabilities in the codebase.
          
          **Scan Date:** ${new Date().toISOString()}
          **Branch:** ${context.ref}
          **Commit:** ${context.sha}
          
          Please review the security scan artifacts and address the identified vulnerabilities.
          
          ### Next Steps
          1. Download and review the security scan artifacts
          2. Update vulnerable dependencies
          3. Apply security patches
          4. Re-run security scan to verify fixes
          
          **Priority:** High
          **Labels:** security, vulnerability
          `;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['security', 'vulnerability', 'automated']
          });

  infrastructure-security:
    name: Infrastructure Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run CDK security scan with Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .
        framework: cloudformation
        output_format: json
        output_file_path: checkov-results.json
        quiet: true
        soft_fail: true

    - name: Run cfn-lint on generated templates
      run: |
        npm run cdk:synth
        pip install cfn-lint
        find cdk.out -name "*.template.json" -exec cfn-lint {} \; > cfn-lint-results.txt || true

    - name: Upload infrastructure security results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: infrastructure-security-results
        path: |
          checkov-results.json
          cfn-lint-results.txt